#ifndef SIM_ERRORS
#define SIM_ERRORS

enum
{
    NON_NUMERIC_STRING_ERROR,
    NUM_ARGS_ERROR,
    FILE_TYPE_ERROR,
    CONFIG_FILE_OPEN_ERROR,
    VERSION_PHASE_VALUE_ERROR,
    UNSUPPORTED_CPU_SCHED_ERROR,
    QUANTUM_TIME_VALUE_ERROR,
    MEMORY_AVAIL_VALUE_ERROR,
    CPU_CYCLE_TIME_VALUE_ERROR,
    IO_CYCLE_TIME_VALUE_ERROR,
    INVALID_LOG_TO_ERROR,
    MDF_LOCATION_ERROR,
    MDF_MEMORY_UNIT_ERROR,
    MDF_OPEN_ERROR,
    SA_OP_STRING_ERROR,
    P_OP_STRING_ERROR,
    I_OP_STRING_ERROR,
    O_OP_STRING_ERROR,
    M_OP_STRING_ERROR,
    NEGATIVE_MDF_VALUE_ERROR,
    CORRUPTED_MDF_ERROR,
    CONCURRENT_APP_START_ERROR,
    APP_END_TIME_ERROR,
    OS_START_ERROR,
    OS_END_ERROR,
    MULTIPLE_OS_START_ERROR,
    LOG_OPEN_ERROR,
    PROCESS_DOES_NOT_OWN_MEMORY,
    WRONG_MEMORY_ACCESS_ID_ERROR,
    MEMORY_ALREADY_ALLOCATED_ERROR,
    CANNOT_ALLOCATE_MEMORY_AMOUNT_ERROR,
    MEMORY_ACCESS_OUTSIDE_BOUNDS_ERROR,
    CANNOT_ACCESS_MEMORY_ERROR,
    VERSION_NOT_PARSED,
    MDF_PATH_NOT_PARSED,
    CPU_SCHED_NOT_PARSED,
    LOG_PATH_NOT_PARSED,
    LOG_TO_NOT_PARSED,
    QUANTUM_NOT_PARSED,
    MEM_AVAIL_NOT_PARSED,
    CPU_CYCLE_NOT_PARSED,
    IO_CYCLE_NOT_PARSED,
    ALL_PROGRAMS_DONE = -1,
    SCHEDULER_NOT_AVAILABLE = -2
};

//DISPLAYS ERRORS
void displayError(int err);

#endif